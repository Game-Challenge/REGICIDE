// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: Goproto/RegicideProtocol.proto

package GameProto

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RequestCode int32

const (
	RequestCode_RequestNone RequestCode = 0
	RequestCode_User        RequestCode = 1
	RequestCode_Room        RequestCode = 2
	RequestCode_Game        RequestCode = 3
	RequestCode_Heart       RequestCode = 4
)

var RequestCode_name = map[int32]string{
	0: "RequestNone",
	1: "User",
	2: "Room",
	3: "Game",
	4: "Heart",
}

var RequestCode_value = map[string]int32{
	"RequestNone": 0,
	"User":        1,
	"Room":        2,
	"Game":        3,
	"Heart":       4,
}

func (x RequestCode) String() string {
	return proto.EnumName(RequestCode_name, int32(x))
}

func (RequestCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f0f796283238dd6f, []int{0}
}

type ActionCode int32

const (
	ActionCode_ActionNone      ActionCode = 0
	ActionCode_Register        ActionCode = 1
	ActionCode_Login           ActionCode = 2
	ActionCode_CreateRoom      ActionCode = 3
	ActionCode_FindRoom        ActionCode = 4
	ActionCode_PlayerList      ActionCode = 5
	ActionCode_JoinRoom        ActionCode = 6
	ActionCode_Exit            ActionCode = 7
	ActionCode_Chat            ActionCode = 8
	ActionCode_StartGame       ActionCode = 9
	ActionCode_Starting        ActionCode = 10
	ActionCode_UpdateState     ActionCode = 11
	ActionCode_ExitGame        ActionCode = 12
	ActionCode_UpCharacterList ActionCode = 13
	ActionCode_UpPos           ActionCode = 14
	ActionCode_Fire            ActionCode = 15
	ActionCode_HeartBeat       ActionCode = 16
	ActionCode_AddCharacter    ActionCode = 17
	ActionCode_RemoveCharacter ActionCode = 18
	ActionCode_ATTACK          ActionCode = 19
	ActionCode_SKILL           ActionCode = 20
	ActionCode_DAMAGE          ActionCode = 21
	ActionCode_HURT            ActionCode = 22
)

var ActionCode_name = map[int32]string{
	0:  "ActionNone",
	1:  "Register",
	2:  "Login",
	3:  "CreateRoom",
	4:  "FindRoom",
	5:  "PlayerList",
	6:  "JoinRoom",
	7:  "Exit",
	8:  "Chat",
	9:  "StartGame",
	10: "Starting",
	11: "UpdateState",
	12: "ExitGame",
	13: "UpCharacterList",
	14: "UpPos",
	15: "Fire",
	16: "HeartBeat",
	17: "AddCharacter",
	18: "RemoveCharacter",
	19: "ATTACK",
	20: "SKILL",
	21: "DAMAGE",
	22: "HURT",
}

var ActionCode_value = map[string]int32{
	"ActionNone":      0,
	"Register":        1,
	"Login":           2,
	"CreateRoom":      3,
	"FindRoom":        4,
	"PlayerList":      5,
	"JoinRoom":        6,
	"Exit":            7,
	"Chat":            8,
	"StartGame":       9,
	"Starting":        10,
	"UpdateState":     11,
	"ExitGame":        12,
	"UpCharacterList": 13,
	"UpPos":           14,
	"Fire":            15,
	"HeartBeat":       16,
	"AddCharacter":    17,
	"RemoveCharacter": 18,
	"ATTACK":          19,
	"SKILL":           20,
	"DAMAGE":          21,
	"HURT":            22,
}

func (x ActionCode) String() string {
	return proto.EnumName(ActionCode_name, int32(x))
}

func (ActionCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f0f796283238dd6f, []int{1}
}

type ReturnCode int32

const (
	ReturnCode_ReturnNone ReturnCode = 0
	ReturnCode_Success    ReturnCode = 1
	ReturnCode_Fail       ReturnCode = 2
)

var ReturnCode_name = map[int32]string{
	0: "ReturnNone",
	1: "Success",
	2: "Fail",
}

var ReturnCode_value = map[string]int32{
	"ReturnNone": 0,
	"Success":    1,
	"Fail":       2,
}

func (x ReturnCode) String() string {
	return proto.EnumName(ReturnCode_name, int32(x))
}

func (ReturnCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f0f796283238dd6f, []int{2}
}

type GAMESTATE int32

const (
	GAMESTATE_STATE1 GAMESTATE = 0
	GAMESTATE_STATE2 GAMESTATE = 1
	GAMESTATE_STATE3 GAMESTATE = 2
	GAMESTATE_STATE4 GAMESTATE = 3
)

var GAMESTATE_name = map[int32]string{
	0: "STATE1",
	1: "STATE2",
	2: "STATE3",
	3: "STATE4",
}

var GAMESTATE_value = map[string]int32{
	"STATE1": 0,
	"STATE2": 1,
	"STATE3": 2,
	"STATE4": 3,
}

func (x GAMESTATE) String() string {
	return proto.EnumName(GAMESTATE_name, int32(x))
}

func (GAMESTATE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f0f796283238dd6f, []int{3}
}

type CardType int32

const (
	CardType_NONE    CardType = 0
	CardType_CLUB    CardType = 1
	CardType_DIAMOND CardType = 2
	CardType_HEART   CardType = 3
	CardType_SPADE   CardType = 4
	CardType_JOKER   CardType = 5
)

var CardType_name = map[int32]string{
	0: "NONE",
	1: "CLUB",
	2: "DIAMOND",
	3: "HEART",
	4: "SPADE",
	5: "JOKER",
}

var CardType_value = map[string]int32{
	"NONE":    0,
	"CLUB":    1,
	"DIAMOND": 2,
	"HEART":   3,
	"SPADE":   4,
	"JOKER":   5,
}

func (x CardType) String() string {
	return proto.EnumName(CardType_name, int32(x))
}

func (CardType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f0f796283238dd6f, []int{4}
}

type MainPack struct {
	Requestcode          RequestCode   `protobuf:"varint,1,opt,name=requestcode,proto3,enum=RegicideProtocol.RequestCode" json:"requestcode,omitempty"`
	Actioncode           ActionCode    `protobuf:"varint,2,opt,name=actioncode,proto3,enum=RegicideProtocol.ActionCode" json:"actioncode,omitempty"`
	Returncode           ReturnCode    `protobuf:"varint,3,opt,name=returncode,proto3,enum=RegicideProtocol.ReturnCode" json:"returncode,omitempty"`
	LoginPack            *LoginPack    `protobuf:"bytes,4,opt,name=loginPack,proto3" json:"loginPack,omitempty"`
	Str                  string        `protobuf:"bytes,5,opt,name=str,proto3" json:"str,omitempty"`
	Roompack             []*RoomPack   `protobuf:"bytes,6,rep,name=roompack,proto3" json:"roompack,omitempty"`
	Playerpack           []*PlayerPack `protobuf:"bytes,7,rep,name=playerpack,proto3" json:"playerpack,omitempty"`
	User                 string        `protobuf:"bytes,8,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MainPack) Reset()         { *m = MainPack{} }
func (m *MainPack) String() string { return proto.CompactTextString(m) }
func (*MainPack) ProtoMessage()    {}
func (*MainPack) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0f796283238dd6f, []int{0}
}
func (m *MainPack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MainPack.Unmarshal(m, b)
}
func (m *MainPack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MainPack.Marshal(b, m, deterministic)
}
func (m *MainPack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MainPack.Merge(m, src)
}
func (m *MainPack) XXX_Size() int {
	return xxx_messageInfo_MainPack.Size(m)
}
func (m *MainPack) XXX_DiscardUnknown() {
	xxx_messageInfo_MainPack.DiscardUnknown(m)
}

var xxx_messageInfo_MainPack proto.InternalMessageInfo

func (m *MainPack) GetRequestcode() RequestCode {
	if m != nil {
		return m.Requestcode
	}
	return RequestCode_RequestNone
}

func (m *MainPack) GetActioncode() ActionCode {
	if m != nil {
		return m.Actioncode
	}
	return ActionCode_ActionNone
}

func (m *MainPack) GetReturncode() ReturnCode {
	if m != nil {
		return m.Returncode
	}
	return ReturnCode_ReturnNone
}

func (m *MainPack) GetLoginPack() *LoginPack {
	if m != nil {
		return m.LoginPack
	}
	return nil
}

func (m *MainPack) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

func (m *MainPack) GetRoompack() []*RoomPack {
	if m != nil {
		return m.Roompack
	}
	return nil
}

func (m *MainPack) GetPlayerpack() []*PlayerPack {
	if m != nil {
		return m.Playerpack
	}
	return nil
}

func (m *MainPack) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type LoginPack struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginPack) Reset()         { *m = LoginPack{} }
func (m *LoginPack) String() string { return proto.CompactTextString(m) }
func (*LoginPack) ProtoMessage()    {}
func (*LoginPack) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0f796283238dd6f, []int{1}
}
func (m *LoginPack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginPack.Unmarshal(m, b)
}
func (m *LoginPack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginPack.Marshal(b, m, deterministic)
}
func (m *LoginPack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginPack.Merge(m, src)
}
func (m *LoginPack) XXX_Size() int {
	return xxx_messageInfo_LoginPack.Size(m)
}
func (m *LoginPack) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginPack.DiscardUnknown(m)
}

var xxx_messageInfo_LoginPack proto.InternalMessageInfo

func (m *LoginPack) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginPack) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type RoomPack struct {
	Roomname             string         `protobuf:"bytes,1,opt,name=roomname,proto3" json:"roomname,omitempty"`
	Maxnum               int32          `protobuf:"varint,2,opt,name=maxnum,proto3" json:"maxnum,omitempty"`
	Curnum               int32          `protobuf:"varint,3,opt,name=curnum,proto3" json:"curnum,omitempty"`
	State                int32          `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	Gamestate            *GameStatePack `protobuf:"bytes,5,opt,name=gamestate,proto3" json:"gamestate,omitempty"`
	RoomID               int32          `protobuf:"varint,6,opt,name=roomID,proto3" json:"roomID,omitempty"`
	CurrentIndex         int32          `protobuf:"varint,7,opt,name=currentIndex,proto3" json:"currentIndex,omitempty"`
	ActorPack            []*ActorPack   `protobuf:"bytes,8,rep,name=actorPack,proto3" json:"actorPack,omitempty"`
	Visable              int32          `protobuf:"varint,9,opt,name=visable,proto3" json:"visable,omitempty"`
	UsePassword          int32          `protobuf:"varint,10,opt,name=usePassword,proto3" json:"usePassword,omitempty"`
	Password             string         `protobuf:"bytes,11,opt,name=password,proto3" json:"password,omitempty"`
	BossActor            *ActorPack     `protobuf:"bytes,12,opt,name=bossActor,proto3" json:"bossActor,omitempty"`
	LeftCardCount        int32          `protobuf:"varint,13,opt,name=LeftCardCount,proto3" json:"LeftCardCount,omitempty"`
	MuDiCards            []*CardData    `protobuf:"bytes,14,rep,name=MuDiCards,proto3" json:"MuDiCards,omitempty"`
	CurrentUseCards      []*CardData    `protobuf:"bytes,15,rep,name=CurrentUseCards,proto3" json:"CurrentUseCards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RoomPack) Reset()         { *m = RoomPack{} }
func (m *RoomPack) String() string { return proto.CompactTextString(m) }
func (*RoomPack) ProtoMessage()    {}
func (*RoomPack) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0f796283238dd6f, []int{2}
}
func (m *RoomPack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomPack.Unmarshal(m, b)
}
func (m *RoomPack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomPack.Marshal(b, m, deterministic)
}
func (m *RoomPack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomPack.Merge(m, src)
}
func (m *RoomPack) XXX_Size() int {
	return xxx_messageInfo_RoomPack.Size(m)
}
func (m *RoomPack) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomPack.DiscardUnknown(m)
}

var xxx_messageInfo_RoomPack proto.InternalMessageInfo

func (m *RoomPack) GetRoomname() string {
	if m != nil {
		return m.Roomname
	}
	return ""
}

func (m *RoomPack) GetMaxnum() int32 {
	if m != nil {
		return m.Maxnum
	}
	return 0
}

func (m *RoomPack) GetCurnum() int32 {
	if m != nil {
		return m.Curnum
	}
	return 0
}

func (m *RoomPack) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *RoomPack) GetGamestate() *GameStatePack {
	if m != nil {
		return m.Gamestate
	}
	return nil
}

func (m *RoomPack) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RoomPack) GetCurrentIndex() int32 {
	if m != nil {
		return m.CurrentIndex
	}
	return 0
}

func (m *RoomPack) GetActorPack() []*ActorPack {
	if m != nil {
		return m.ActorPack
	}
	return nil
}

func (m *RoomPack) GetVisable() int32 {
	if m != nil {
		return m.Visable
	}
	return 0
}

func (m *RoomPack) GetUsePassword() int32 {
	if m != nil {
		return m.UsePassword
	}
	return 0
}

func (m *RoomPack) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RoomPack) GetBossActor() *ActorPack {
	if m != nil {
		return m.BossActor
	}
	return nil
}

func (m *RoomPack) GetLeftCardCount() int32 {
	if m != nil {
		return m.LeftCardCount
	}
	return 0
}

func (m *RoomPack) GetMuDiCards() []*CardData {
	if m != nil {
		return m.MuDiCards
	}
	return nil
}

func (m *RoomPack) GetCurrentUseCards() []*CardData {
	if m != nil {
		return m.CurrentUseCards
	}
	return nil
}

type PlayerPack struct {
	Playername           string   `protobuf:"bytes,1,opt,name=playername,proto3" json:"playername,omitempty"`
	PlayerID             string   `protobuf:"bytes,2,opt,name=playerID,proto3" json:"playerID,omitempty"`
	Hp                   int32    `protobuf:"varint,3,opt,name=hp,proto3" json:"hp,omitempty"`
	PosPack              *PosPack `protobuf:"bytes,4,opt,name=posPack,proto3" json:"posPack,omitempty"`
	PlayerJob            int32    `protobuf:"varint,5,opt,name=playerJob,proto3" json:"playerJob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerPack) Reset()         { *m = PlayerPack{} }
func (m *PlayerPack) String() string { return proto.CompactTextString(m) }
func (*PlayerPack) ProtoMessage()    {}
func (*PlayerPack) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0f796283238dd6f, []int{3}
}
func (m *PlayerPack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerPack.Unmarshal(m, b)
}
func (m *PlayerPack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerPack.Marshal(b, m, deterministic)
}
func (m *PlayerPack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerPack.Merge(m, src)
}
func (m *PlayerPack) XXX_Size() int {
	return xxx_messageInfo_PlayerPack.Size(m)
}
func (m *PlayerPack) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerPack.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerPack proto.InternalMessageInfo

func (m *PlayerPack) GetPlayername() string {
	if m != nil {
		return m.Playername
	}
	return ""
}

func (m *PlayerPack) GetPlayerID() string {
	if m != nil {
		return m.PlayerID
	}
	return ""
}

func (m *PlayerPack) GetHp() int32 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *PlayerPack) GetPosPack() *PosPack {
	if m != nil {
		return m.PosPack
	}
	return nil
}

func (m *PlayerPack) GetPlayerJob() int32 {
	if m != nil {
		return m.PlayerJob
	}
	return 0
}

type GameStatePack struct {
	State                GAMESTATE `protobuf:"varint,1,opt,name=state,proto3,enum=RegicideProtocol.GAMESTATE" json:"state,omitempty"`
	BossId               int32     `protobuf:"varint,2,opt,name=BossId,proto3" json:"BossId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GameStatePack) Reset()         { *m = GameStatePack{} }
func (m *GameStatePack) String() string { return proto.CompactTextString(m) }
func (*GameStatePack) ProtoMessage()    {}
func (*GameStatePack) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0f796283238dd6f, []int{4}
}
func (m *GameStatePack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameStatePack.Unmarshal(m, b)
}
func (m *GameStatePack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameStatePack.Marshal(b, m, deterministic)
}
func (m *GameStatePack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameStatePack.Merge(m, src)
}
func (m *GameStatePack) XXX_Size() int {
	return xxx_messageInfo_GameStatePack.Size(m)
}
func (m *GameStatePack) XXX_DiscardUnknown() {
	xxx_messageInfo_GameStatePack.DiscardUnknown(m)
}

var xxx_messageInfo_GameStatePack proto.InternalMessageInfo

func (m *GameStatePack) GetState() GAMESTATE {
	if m != nil {
		return m.State
	}
	return GAMESTATE_STATE1
}

func (m *GameStatePack) GetBossId() int32 {
	if m != nil {
		return m.BossId
	}
	return 0
}

type ActorPack struct {
	ActorId              int32       `protobuf:"varint,1,opt,name=ActorId,proto3" json:"ActorId,omitempty"`
	CardValueId          int32       `protobuf:"varint,2,opt,name=CardValueId,proto3" json:"CardValueId,omitempty"`
	Hp                   int32       `protobuf:"varint,3,opt,name=Hp,proto3" json:"Hp,omitempty"`
	ATK                  int32       `protobuf:"varint,4,opt,name=ATK,proto3" json:"ATK,omitempty"`
	Index                int32       `protobuf:"varint,5,opt,name=Index,proto3" json:"Index,omitempty"`
	ActorJob             int32       `protobuf:"varint,6,opt,name=ActorJob,proto3" json:"ActorJob,omitempty"`
	CuttrntCards         []*CardData `protobuf:"bytes,7,rep,name=CuttrntCards,proto3" json:"CuttrntCards,omitempty"`
	ActorName            string      `protobuf:"bytes,8,opt,name=ActorName,proto3" json:"ActorName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ActorPack) Reset()         { *m = ActorPack{} }
func (m *ActorPack) String() string { return proto.CompactTextString(m) }
func (*ActorPack) ProtoMessage()    {}
func (*ActorPack) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0f796283238dd6f, []int{5}
}
func (m *ActorPack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActorPack.Unmarshal(m, b)
}
func (m *ActorPack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActorPack.Marshal(b, m, deterministic)
}
func (m *ActorPack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActorPack.Merge(m, src)
}
func (m *ActorPack) XXX_Size() int {
	return xxx_messageInfo_ActorPack.Size(m)
}
func (m *ActorPack) XXX_DiscardUnknown() {
	xxx_messageInfo_ActorPack.DiscardUnknown(m)
}

var xxx_messageInfo_ActorPack proto.InternalMessageInfo

func (m *ActorPack) GetActorId() int32 {
	if m != nil {
		return m.ActorId
	}
	return 0
}

func (m *ActorPack) GetCardValueId() int32 {
	if m != nil {
		return m.CardValueId
	}
	return 0
}

func (m *ActorPack) GetHp() int32 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *ActorPack) GetATK() int32 {
	if m != nil {
		return m.ATK
	}
	return 0
}

func (m *ActorPack) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ActorPack) GetActorJob() int32 {
	if m != nil {
		return m.ActorJob
	}
	return 0
}

func (m *ActorPack) GetCuttrntCards() []*CardData {
	if m != nil {
		return m.CuttrntCards
	}
	return nil
}

func (m *ActorPack) GetActorName() string {
	if m != nil {
		return m.ActorName
	}
	return ""
}

type CardData struct {
	CardInt              int32    `protobuf:"varint,1,opt,name=cardInt,proto3" json:"cardInt,omitempty"`
	CardValue            int32    `protobuf:"varint,2,opt,name=cardValue,proto3" json:"cardValue,omitempty"`
	CardType             CardType `protobuf:"varint,3,opt,name=cardType,proto3,enum=RegicideProtocol.CardType" json:"cardType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardData) Reset()         { *m = CardData{} }
func (m *CardData) String() string { return proto.CompactTextString(m) }
func (*CardData) ProtoMessage()    {}
func (*CardData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0f796283238dd6f, []int{6}
}
func (m *CardData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardData.Unmarshal(m, b)
}
func (m *CardData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardData.Marshal(b, m, deterministic)
}
func (m *CardData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardData.Merge(m, src)
}
func (m *CardData) XXX_Size() int {
	return xxx_messageInfo_CardData.Size(m)
}
func (m *CardData) XXX_DiscardUnknown() {
	xxx_messageInfo_CardData.DiscardUnknown(m)
}

var xxx_messageInfo_CardData proto.InternalMessageInfo

func (m *CardData) GetCardInt() int32 {
	if m != nil {
		return m.CardInt
	}
	return 0
}

func (m *CardData) GetCardValue() int32 {
	if m != nil {
		return m.CardValue
	}
	return 0
}

func (m *CardData) GetCardType() CardType {
	if m != nil {
		return m.CardType
	}
	return CardType_NONE
}

type PosPack struct {
	PosX                 int32    `protobuf:"varint,1,opt,name=PosX,proto3" json:"PosX,omitempty"`
	PosY                 int32    `protobuf:"varint,2,opt,name=PosY,proto3" json:"PosY,omitempty"`
	PosZ                 int32    `protobuf:"varint,3,opt,name=PosZ,proto3" json:"PosZ,omitempty"`
	RotaX                int32    `protobuf:"varint,4,opt,name=RotaX,proto3" json:"RotaX,omitempty"`
	RotaY                int32    `protobuf:"varint,5,opt,name=RotaY,proto3" json:"RotaY,omitempty"`
	RotaZ                int32    `protobuf:"varint,6,opt,name=RotaZ,proto3" json:"RotaZ,omitempty"`
	GunRotZ              float32  `protobuf:"fixed32,7,opt,name=GunRotZ,proto3" json:"GunRotZ,omitempty"`
	Animation            int32    `protobuf:"varint,8,opt,name=Animation,proto3" json:"Animation,omitempty"`
	Dirt                 int32    `protobuf:"varint,9,opt,name=Dirt,proto3" json:"Dirt,omitempty"`
	MoveX                float32  `protobuf:"fixed32,10,opt,name=MoveX,proto3" json:"MoveX,omitempty"`
	MoveY                float32  `protobuf:"fixed32,11,opt,name=MoveY,proto3" json:"MoveY,omitempty"`
	MoveZ                float32  `protobuf:"fixed32,12,opt,name=MoveZ,proto3" json:"MoveZ,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PosPack) Reset()         { *m = PosPack{} }
func (m *PosPack) String() string { return proto.CompactTextString(m) }
func (*PosPack) ProtoMessage()    {}
func (*PosPack) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0f796283238dd6f, []int{7}
}
func (m *PosPack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PosPack.Unmarshal(m, b)
}
func (m *PosPack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PosPack.Marshal(b, m, deterministic)
}
func (m *PosPack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PosPack.Merge(m, src)
}
func (m *PosPack) XXX_Size() int {
	return xxx_messageInfo_PosPack.Size(m)
}
func (m *PosPack) XXX_DiscardUnknown() {
	xxx_messageInfo_PosPack.DiscardUnknown(m)
}

var xxx_messageInfo_PosPack proto.InternalMessageInfo

func (m *PosPack) GetPosX() int32 {
	if m != nil {
		return m.PosX
	}
	return 0
}

func (m *PosPack) GetPosY() int32 {
	if m != nil {
		return m.PosY
	}
	return 0
}

func (m *PosPack) GetPosZ() int32 {
	if m != nil {
		return m.PosZ
	}
	return 0
}

func (m *PosPack) GetRotaX() int32 {
	if m != nil {
		return m.RotaX
	}
	return 0
}

func (m *PosPack) GetRotaY() int32 {
	if m != nil {
		return m.RotaY
	}
	return 0
}

func (m *PosPack) GetRotaZ() int32 {
	if m != nil {
		return m.RotaZ
	}
	return 0
}

func (m *PosPack) GetGunRotZ() float32 {
	if m != nil {
		return m.GunRotZ
	}
	return 0
}

func (m *PosPack) GetAnimation() int32 {
	if m != nil {
		return m.Animation
	}
	return 0
}

func (m *PosPack) GetDirt() int32 {
	if m != nil {
		return m.Dirt
	}
	return 0
}

func (m *PosPack) GetMoveX() float32 {
	if m != nil {
		return m.MoveX
	}
	return 0
}

func (m *PosPack) GetMoveY() float32 {
	if m != nil {
		return m.MoveY
	}
	return 0
}

func (m *PosPack) GetMoveZ() float32 {
	if m != nil {
		return m.MoveZ
	}
	return 0
}

func init() {
	proto.RegisterEnum("RegicideProtocol.RequestCode", RequestCode_name, RequestCode_value)
	proto.RegisterEnum("RegicideProtocol.ActionCode", ActionCode_name, ActionCode_value)
	proto.RegisterEnum("RegicideProtocol.ReturnCode", ReturnCode_name, ReturnCode_value)
	proto.RegisterEnum("RegicideProtocol.GAMESTATE", GAMESTATE_name, GAMESTATE_value)
	proto.RegisterEnum("RegicideProtocol.CardType", CardType_name, CardType_value)
	proto.RegisterType((*MainPack)(nil), "RegicideProtocol.MainPack")
	proto.RegisterType((*LoginPack)(nil), "RegicideProtocol.LoginPack")
	proto.RegisterType((*RoomPack)(nil), "RegicideProtocol.RoomPack")
	proto.RegisterType((*PlayerPack)(nil), "RegicideProtocol.PlayerPack")
	proto.RegisterType((*GameStatePack)(nil), "RegicideProtocol.GameStatePack")
	proto.RegisterType((*ActorPack)(nil), "RegicideProtocol.ActorPack")
	proto.RegisterType((*CardData)(nil), "RegicideProtocol.CardData")
	proto.RegisterType((*PosPack)(nil), "RegicideProtocol.PosPack")
}

func init() { proto.RegisterFile("Goproto/RegicideProtocol.proto", fileDescriptor_f0f796283238dd6f) }

var fileDescriptor_f0f796283238dd6f = []byte{
	// 1180 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x56, 0xdb, 0x6e, 0xdb, 0x46,
	0x13, 0x8e, 0xce, 0xe2, 0xc8, 0x87, 0xfd, 0x37, 0xf9, 0x03, 0x36, 0x49, 0x53, 0x43, 0xe8, 0x85,
	0xe1, 0x8b, 0x14, 0xb1, 0x8b, 0xa2, 0x45, 0x4f, 0x60, 0x24, 0xc5, 0x56, 0x2c, 0x3b, 0xc2, 0x5a,
	0x2a, 0x62, 0xdf, 0xad, 0xc9, 0xad, 0x4d, 0xd4, 0xe2, 0xb2, 0xe4, 0x32, 0x4d, 0xfa, 0x1e, 0xbd,
	0xed, 0x0b, 0xf4, 0x5d, 0xfa, 0x02, 0x7d, 0x92, 0xde, 0x15, 0x33, 0xcb, 0x93, 0x63, 0x1b, 0xb9,
	0x9b, 0xef, 0xdb, 0x39, 0xed, 0xec, 0xcc, 0x90, 0xf0, 0x74, 0x5f, 0xc7, 0x89, 0x36, 0xfa, 0x0b,
	0xa1, 0x2e, 0x42, 0x3f, 0x0c, 0xd4, 0x1c, 0x91, 0xaf, 0xaf, 0x9e, 0x11, 0xcd, 0xd9, 0x87, 0xfc,
	0xf0, 0xcf, 0x16, 0xf4, 0x8f, 0x64, 0x18, 0xcd, 0xa5, 0xff, 0x0b, 0xff, 0x11, 0x06, 0x89, 0xfa,
	0x35, 0x53, 0xa9, 0xf1, 0x75, 0xa0, 0xdc, 0xc6, 0x56, 0x63, 0x7b, 0x63, 0xf7, 0xd3, 0x67, 0x37,
	0x9c, 0x09, 0xab, 0x34, 0xd2, 0x81, 0x12, 0x75, 0x0b, 0xfe, 0x1d, 0x80, 0xf4, 0x4d, 0xa8, 0x23,
	0xb2, 0x6f, 0x92, 0xfd, 0x93, 0x9b, 0xf6, 0x1e, 0xe9, 0x90, 0x79, 0x4d, 0x1f, 0xad, 0x13, 0x65,
	0xb2, 0xc4, 0x5a, 0xb7, 0xee, 0xb2, 0x16, 0xa4, 0x63, 0xad, 0x2b, 0x7d, 0xfe, 0x0d, 0x38, 0x57,
	0xfa, 0xc2, 0xde, 0xc4, 0x6d, 0x6f, 0x35, 0xb6, 0x07, 0xbb, 0x8f, 0x6f, 0x1a, 0xcf, 0x0a, 0x15,
	0x51, 0x69, 0x73, 0x06, 0xad, 0xd4, 0x24, 0x6e, 0x67, 0xab, 0xb1, 0xed, 0x08, 0x14, 0xf9, 0x57,
	0xd0, 0x4f, 0xb4, 0x5e, 0xc5, 0xe8, 0xab, 0xbb, 0xd5, 0xda, 0x1e, 0xec, 0x3e, 0xba, 0x25, 0x11,
	0xad, 0x57, 0xe4, 0xaa, 0xd4, 0xc5, 0x2b, 0xc4, 0x57, 0xf2, 0xbd, 0x4a, 0xc8, 0xb2, 0x47, 0x96,
	0xb7, 0x5c, 0x61, 0x4e, 0x3a, 0x64, 0x5b, 0xd3, 0xe7, 0x1c, 0xda, 0x59, 0xaa, 0x12, 0xb7, 0x4f,
	0x89, 0x90, 0x3c, 0x1c, 0x81, 0x53, 0xe6, 0xcc, 0x1f, 0x41, 0x1f, 0xc9, 0x48, 0xae, 0xec, 0xeb,
	0x38, 0xa2, 0xc4, 0x78, 0x16, 0xcb, 0x34, 0xfd, 0x4d, 0x27, 0x01, 0x55, 0xde, 0x11, 0x25, 0x1e,
	0xfe, 0xd3, 0x86, 0x7e, 0x91, 0x2d, 0x2a, 0x62, 0xbe, 0x75, 0x27, 0x05, 0xe6, 0x0f, 0xa1, 0xbb,
	0x92, 0xef, 0xa2, 0x6c, 0x45, 0x2e, 0x3a, 0x22, 0x47, 0xc8, 0xfb, 0x59, 0x82, 0x7c, 0xcb, 0xf2,
	0x16, 0xf1, 0x07, 0xd0, 0x49, 0x8d, 0x34, 0x8a, 0x0a, 0xde, 0x11, 0x16, 0xf0, 0xef, 0xc1, 0xb9,
	0x90, 0x2b, 0x65, 0x4f, 0x3a, 0xf4, 0x14, 0x9f, 0xdd, 0x2c, 0xc2, 0xbe, 0x5c, 0xa9, 0x13, 0x54,
	0xb1, 0xcf, 0x51, 0x5a, 0x60, 0x30, 0x4c, 0x68, 0x3a, 0x76, 0xbb, 0x36, 0x98, 0x45, 0x7c, 0x08,
	0x6b, 0x7e, 0x96, 0x24, 0x2a, 0x32, 0xd3, 0x28, 0x50, 0xef, 0xdc, 0x1e, 0x9d, 0x5e, 0xe3, 0xb0,
	0x0b, 0xa4, 0x6f, 0x34, 0xd5, 0xd6, 0xed, 0x53, 0xfd, 0x1f, 0xdf, 0xda, 0x80, 0x56, 0x45, 0x54,
	0xda, 0xdc, 0x85, 0xde, 0xdb, 0x30, 0x95, 0xe7, 0x57, 0xca, 0x75, 0xc8, 0x73, 0x01, 0xf9, 0x16,
	0x0c, 0xb2, 0x54, 0xcd, 0x8b, 0xea, 0x02, 0x9d, 0xd6, 0xa9, 0x6b, 0xc5, 0x1f, 0x5c, 0x2f, 0x3e,
	0xa6, 0x74, 0xae, 0xd3, 0x94, 0x62, 0xba, 0x6b, 0x77, 0x35, 0x66, 0x2d, 0xa5, 0x52, 0x9b, 0x7f,
	0x0e, 0xeb, 0x33, 0xf5, 0xb3, 0x19, 0xc9, 0x24, 0x18, 0xe9, 0x2c, 0x32, 0xee, 0x3a, 0x85, 0xbe,
	0x4e, 0xf2, 0xaf, 0xc1, 0x39, 0xca, 0xc6, 0x21, 0x12, 0xa9, 0xbb, 0x71, 0x57, 0xb7, 0xe2, 0xf1,
	0x58, 0x1a, 0x29, 0x2a, 0x65, 0x3e, 0x86, 0xcd, 0x91, 0xad, 0xde, 0x32, 0x55, 0xd6, 0x7e, 0xf3,
	0xa3, 0xf6, 0x1f, 0x9a, 0x0c, 0xff, 0x6a, 0x00, 0x54, 0x1d, 0xcd, 0x9f, 0x16, 0x33, 0x50, 0xeb,
	0xb0, 0x1a, 0x43, 0xb5, 0x22, 0x34, 0x1d, 0x97, 0x8d, 0x9a, 0x63, 0xbe, 0x01, 0xcd, 0xcb, 0x38,
	0xef, 0xb1, 0xe6, 0x65, 0xcc, 0xf7, 0xa0, 0x17, 0xeb, 0xb4, 0x36, 0xd2, 0x9f, 0xdc, 0x32, 0x4c,
	0x56, 0x41, 0x14, 0x9a, 0xfc, 0x09, 0x38, 0xd6, 0xe1, 0x2b, 0x7d, 0x4e, 0xed, 0xd7, 0x11, 0x15,
	0x31, 0x3c, 0x83, 0xf5, 0x6b, 0x9d, 0xc7, 0x9f, 0x17, 0x3d, 0x6c, 0xf7, 0xdd, 0x2d, 0x6f, 0xb3,
	0xef, 0x1d, 0x4d, 0x4e, 0x16, 0xde, 0x62, 0x52, 0x34, 0xf8, 0x43, 0xe8, 0xbe, 0xd0, 0x69, 0x3a,
	0x0d, 0x8a, 0x31, 0xb1, 0x68, 0xf8, 0x6f, 0x03, 0x1c, 0xaf, 0xde, 0x50, 0x04, 0xa6, 0x01, 0xb9,
	0xee, 0x88, 0x02, 0x62, 0x43, 0x61, 0xe9, 0x7e, 0x92, 0x57, 0x99, 0x2a, 0x9d, 0xd4, 0x29, 0x2c,
	0xc4, 0x41, 0x59, 0x88, 0x83, 0x18, 0x57, 0x94, 0xb7, 0x38, 0xcc, 0xc7, 0x0c, 0x45, 0x1c, 0x3d,
	0x3b, 0x06, 0xf6, 0x86, 0x16, 0x60, 0x71, 0x29, 0x08, 0x5e, 0xdd, 0x4e, 0x4f, 0x89, 0xf9, 0x0f,
	0xb0, 0x36, 0xca, 0x8c, 0x49, 0x22, 0x63, 0x9f, 0xba, 0xf7, 0xd1, 0xa7, 0xbe, 0xa6, 0x8f, 0x75,
	0x25, 0x5f, 0xc7, 0xf8, 0xae, 0x76, 0x47, 0x55, 0xc4, 0xf0, 0x77, 0xe8, 0x17, 0x76, 0x78, 0x73,
	0x5f, 0x26, 0xc1, 0x34, 0x32, 0xc5, 0xcd, 0x73, 0x88, 0x3e, 0xfc, 0xe2, 0x9a, 0xf9, 0xbd, 0x2b,
	0x02, 0xd7, 0x2e, 0x82, 0xc5, 0xfb, 0xb8, 0xd8, 0xff, 0x77, 0x64, 0x87, 0x1a, 0xa2, 0xd4, 0x1d,
	0xfe, 0xd1, 0x84, 0x5e, 0xde, 0x06, 0xb8, 0x44, 0xe7, 0x3a, 0x7d, 0x93, 0x07, 0x26, 0x39, 0xe7,
	0x4e, 0xf3, 0x80, 0x24, 0xe7, 0xdc, 0x59, 0x5e, 0x63, 0x92, 0xb1, 0xa6, 0x42, 0x1b, 0xf9, 0xa6,
	0x58, 0x67, 0x04, 0x0a, 0xf6, 0xb4, 0xa8, 0x34, 0x81, 0x82, 0x3d, 0xcb, 0xcb, 0x6c, 0x01, 0xde,
	0x7c, 0x3f, 0x8b, 0x84, 0x36, 0x67, 0xb4, 0x9e, 0x9a, 0xa2, 0x80, 0x54, 0xbd, 0x28, 0x5c, 0x49,
	0xfc, 0xdc, 0x51, 0xf5, 0x3a, 0xa2, 0x22, 0x30, 0x9b, 0x71, 0x98, 0x98, 0x7c, 0xf3, 0x90, 0x8c,
	0x11, 0x8e, 0xf4, 0x5b, 0xf5, 0x86, 0x16, 0x4e, 0x53, 0x58, 0x50, 0xb0, 0xa7, 0xb4, 0x67, 0x72,
	0xf6, 0xb4, 0x60, 0xcf, 0x68, 0xc1, 0xe4, 0xec, 0xd9, 0xce, 0x3e, 0x0c, 0x6a, 0xdf, 0x6a, 0xbe,
	0x59, 0xc2, 0x63, 0x1d, 0x29, 0x76, 0x8f, 0xf7, 0xa1, 0xbd, 0x4c, 0x55, 0xc2, 0x1a, 0x28, 0xe1,
	0x07, 0x82, 0x35, 0x51, 0xc2, 0xf9, 0x60, 0x2d, 0xee, 0x40, 0xe7, 0x40, 0xc9, 0xc4, 0xb0, 0xf6,
	0xce, 0xdf, 0x4d, 0x80, 0xea, 0xab, 0xcd, 0x37, 0x0a, 0x94, 0xfb, 0x59, 0x83, 0x3e, 0x3e, 0x53,
	0x6a, 0xc8, 0x97, 0x03, 0x1d, 0xfa, 0x64, 0xb1, 0x26, 0x2a, 0x8e, 0x12, 0x25, 0x8d, 0x22, 0xe7,
	0x2d, 0x54, 0x7c, 0x19, 0x46, 0x01, 0xa1, 0x36, 0x9e, 0xda, 0xbd, 0x31, 0x0b, 0x53, 0xc3, 0x3a,
	0x78, 0xfa, 0x4a, 0x87, 0x11, 0x9d, 0x76, 0x31, 0x91, 0xc9, 0xbb, 0xd0, 0xb0, 0x1e, 0x4a, 0xa3,
	0x4b, 0x69, 0x58, 0x9f, 0xaf, 0x83, 0x73, 0x62, 0x64, 0x62, 0x28, 0x43, 0x07, 0x0d, 0x08, 0x86,
	0xd1, 0x05, 0x03, 0xbc, 0xde, 0x32, 0x0e, 0xa4, 0xb1, 0xb3, 0xcd, 0x06, 0x78, 0x8c, 0x1e, 0x48,
	0x79, 0x8d, 0xdf, 0x87, 0xcd, 0x65, 0x3c, 0xba, 0x94, 0x89, 0xf4, 0x4d, 0x1e, 0x72, 0x1d, 0x73,
	0x5d, 0xc6, 0x73, 0x9d, 0xb2, 0x0d, 0x8c, 0xf2, 0x32, 0x4c, 0x14, 0xdb, 0xc4, 0x28, 0x74, 0xf1,
	0x17, 0x4a, 0x1a, 0xc6, 0x38, 0x83, 0x35, 0x2f, 0x08, 0x4a, 0x4b, 0xf6, 0x3f, 0x74, 0x25, 0xd4,
	0x4a, 0xbf, 0x55, 0x15, 0xc9, 0x39, 0x40, 0xd7, 0x5b, 0x2c, 0xbc, 0xd1, 0x21, 0xbb, 0x8f, 0x6e,
	0x4f, 0x0e, 0xa7, 0xb3, 0x19, 0x7b, 0x80, 0xf4, 0xd8, 0x3b, 0xf2, 0xf6, 0x27, 0xec, 0xff, 0x18,
	0xe2, 0x60, 0x29, 0x16, 0xec, 0xe1, 0xce, 0x1e, 0x40, 0xf5, 0x1f, 0x83, 0x85, 0xb0, 0x28, 0xaf,
	0xe7, 0x00, 0x7a, 0x27, 0x99, 0xef, 0xab, 0x34, 0xb5, 0x4f, 0xf3, 0x52, 0x86, 0x57, 0xac, 0xb9,
	0xf3, 0x2d, 0x38, 0xe5, 0x2a, 0x42, 0xbf, 0x24, 0x3c, 0x67, 0xf7, 0x4a, 0x79, 0x97, 0x35, 0x4a,
	0x79, 0x8f, 0x35, 0x4b, 0xf9, 0x4b, 0xd6, 0xda, 0x99, 0xd9, 0xf9, 0xc4, 0x79, 0x41, 0x97, 0xc7,
	0xaf, 0x8f, 0x27, 0xb6, 0x03, 0x46, 0xb3, 0xe5, 0x0b, 0xd6, 0xc0, 0x98, 0xe3, 0xa9, 0x77, 0xf4,
	0xfa, 0x78, 0xcc, 0x9a, 0xf4, 0xf4, 0x13, 0x4f, 0x2c, 0x6c, 0x17, 0x9c, 0xcc, 0xbd, 0xf1, 0x84,
	0xb5, 0x51, 0x7c, 0xf5, 0xfa, 0x70, 0x22, 0x58, 0xe7, 0xbc, 0x4b, 0x3f, 0x94, 0x7b, 0xff, 0x05,
	0x00, 0x00, 0xff, 0xff, 0x97, 0x0e, 0x2c, 0x55, 0x72, 0x0a, 0x00, 0x00,
}
